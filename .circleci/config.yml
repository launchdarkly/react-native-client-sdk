version: 2.1

jobs:
  # This job simulates integrating the SDK into a freshly created React Native project template and
  # then builds Android and iOS applications using the template.
  build-applications-using-template:
    parameters:
      rn-version:
        description: The React Native project template version
        type: string
      xcode-version:
        description: The Xcode version to build with
        type: string

    macos:
      xcode: <<parameters.xcode-version>>

    environment:
      ANDROID_SDK_ROOT: '/tmp/Android'

    steps:
      - checkout

      - run:
          name: Download Android command line tools
          command: |
            mkdir -p $ANDROID_SDK_ROOT/cmdline-tools/latest
            curl https://dl.google.com/android/repository/commandlinetools-mac-8092744_latest.zip -o cmdline-tools.zip
            unzip cmdline-tools.zip
            mv cmdline-tools/* $ANDROID_SDK_ROOT/cmdline-tools/latest/
            yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses > /dev/null || true

      - run:
          name: Setup Android debug keystore
          command: |
            keytool -genkey -v -keystore debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "cn=Unknown, ou=Unknown, o=Unknown, c=Unknown"
            mkdir -p ~/.android
            cp debug.keystore ~/.android/

      - restore_cache:
          name: Restore RN project template from cache
          key: v1-rn-template-cache-<<parameters.rn-version>>

      - run:
          name: Create CI test application for RN <<parameters.rn-version>>
          command: |
            cd ..
            mkdir -p test
            cd test
            [ -d "CITest" ] || npx react-native@<<parameters.rn-version>> init CITest --version <<parameters.rn-version>> --skip-install

            # use macos default ruby version
            cd CITest
            rm -rf .ruby-version

      - save_cache:
          name: Save RN project template to cache
          key: v1-rn-template-cache-<<parameters.rn-version>>
          paths:
            - ../test/CITest

      - run:
          name: Add LaunchDarkly dependency
          command: |
            cd ../test/CITest && npx yarn add file:../../project
            cd node_modules/launchdarkly-react-native-client-sdk/ios
            rm -rf LaunchdarklyReactNativeClient.xcworkspace
            rm -rf build
            rm -rf Pods
            rm -rf Tests
            rm -rf Podfile
            rm -rf Podfile.lock

      - restore_cache:
          name: Restore gem cache
          key: v1-gem-cache-<<parameters.xcode-version>>-

      # Newer cocoapods fixes Swift library auto-linking errors
      - run:
          name: Update CocoaPods
          command: |
            sudo gem install cocoapods
            sudo gem cleanup
            # Used as cache key to prevent storing redundant caches
            gem list > /tmp/cache-key.txt

      - save_cache:
          name: Save gem cache
          key: v1-gem-cache-<<parameters.xcode-version>>-{{ checksum "/tmp/cache-key.txt" }}
          paths:
            - ~/.gem

      - run:
          name: Install iOS Pods
          command: cd ../test/CITest/ios && pod install

      - run:
          name: Build application for iOS (Release)
          command: |
            mkdir -p artifacts
            cd ../test/CITest/ios
            xcodebuild -workspace CITest.xcworkspace -scheme CITest build -configuration Release -destination "generic/platform=iOS" CODE_SIGNING_ALLOWED=NO GCC_WARN_INHIBIT_ALL_WARNINGS=YES | tee '../../../project/artifacts/xcb-<<parameters.rn-version>>.txt' | xcpretty

      - when:
          # only build android once
          condition:
            and:
              - equal: [14.3.1, << parameters.xcode-version >>]
              - or:
                - equal: [0.71.13, << parameters.rn-version >>]
                - equal: [0.72.7, << parameters.rn-version >>]
                
          steps:
            - run:
                name: Build application for Android
                command: cd ../test/CITest/android && ./gradlew packageRelease

      - store_artifacts:
          path: artifacts

workflows:
  version: 2
  install-sdk-build-app:
    jobs:
      - build-applications-using-template:
          name: rn<<matrix.rn-version>>-xc<<matrix.xcode-version>>-build-apps-using-template
          matrix:
            parameters:
              rn-version: ['0.69.12', '0.70.13', '0.71.13', '0.72.7']
              xcode-version: ['14.3.1', '15.1']
